import { useState } from 'react';
import { useStore } from '../store/useStore';
import { FileText, Download, Copy } from 'lucide-react';
import { format } from 'date-fns';
import { ja } from 'date-fns/locale';
// ReportGenerator component removed
import DiscordSettings from './DiscordSettings';

const ReportView = () => {
  const { project, reports } = useStore();
  // const [selectedReportId, setSelectedReportId] = useState<string | null>(null);
  const [showGenerator, setShowGenerator] = useState(false);
  const [reportText, setReportText] = useState('');

  if (!project) return null;

  const generateReport = () => {
    const now = new Date();
    const completedTasks = project.tasks.filter(t => t.status === 'completed');
    const inProgressTasks = project.tasks.filter(t => t.status === 'in_progress');
    const blockedTasks = project.tasks.filter(t => t.status === 'blocked');
    const notStartedTasks = project.tasks.filter(t => t.status === 'not_started');
    const overallProgress = project.tasks.length > 0
      ? Math.round(project.tasks.reduce((sum, task) => sum + task.progress, 0) / project.tasks.length)
      : 0;

    const report = `## ${project.name} 進捗レポート
### ${format(now, 'yyyy年M月d日', { locale: ja })}

---

### 📊 全体進捗: ${overallProgress}%

### 📈 タスク状況
- **総タスク数**: ${project.tasks.length}件
- **完了**: ${completedTasks.length}件
- **進行中**: ${inProgressTasks.length}件  
- **未着手**: ${notStartedTasks.length}件
- **ブロック**: ${blockedTasks.length}件

### 👥 メンバー別進捗
${project.members.map(member => {
  const memberTasks = project.tasks.filter(t => t.assigneeIds.includes(member.id));
  const memberProgress = memberTasks.length > 0
    ? Math.round(memberTasks.reduce((sum, task) => sum + task.progress, 0) / memberTasks.length)
    : 0;
  const memberCompleted = memberTasks.filter(t => t.status === 'completed').length;
  const memberInProgress = memberTasks.filter(t => t.status === 'in_progress').length;
  
  return `\n**${member.name}** (${member.role})
- 進捗率: ${memberProgress}%
- タスク: 完了 ${memberCompleted}件 / 進行中 ${memberInProgress}件 / 合計 ${memberTasks.length}件`;
}).join('\n')}

### 🎯 今週の完了タスク
${completedTasks.slice(0, 5).map(task => {
  const assignees = task.assigneeIds.map(id => project.members.find(m => m.id === id)?.name).join(', ');
  return `- ${task.title} (${assignees})`;
}).join('\n') || '- なし'}

### 🚧 ブロック中のタスク
${blockedTasks.map(task => {
  const assignees = task.assigneeIds.map(id => project.members.find(m => m.id === id)?.name).join(', ');
  return `- ${task.title} (${assignees})`;
}).join('\n') || '- なし'}

### 📅 来週の予定
${inProgressTasks.slice(0, 5).map(task => {
  const assignees = task.assigneeIds.map(id => project.members.find(m => m.id === id)?.name).join(', ');
  return `- ${task.title} (${assignees}) - ${task.progress}%完了`;
}).join('\n') || '- なし'}

---
*Generated by ネオスフィア進捗管理システム*`;

    setReportText(report);
    setShowGenerator(true);
  };

  const copyToClipboard = () => {
    navigator.clipboard.writeText(reportText);
    alert('レポートをクリップボードにコピーしました！');
  };

  const downloadReport = () => {
    const blob = new Blob([reportText], { type: 'text/markdown' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `progress_report_${format(new Date(), 'yyyyMMdd')}.md`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold text-gray-900">レポート</h2>
        <button
          onClick={generateReport}
          className="flex items-center space-x-2 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition"
        >
          <FileText className="w-5 h-5" />
          <span>レポート生成</span>
        </button>
      </div>

      {showGenerator && (
        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex justify-between items-center mb-4">
            <h3 className="text-lg font-semibold">生成されたレポート</h3>
            <div className="flex space-x-2">
              <button
                onClick={copyToClipboard}
                className="flex items-center space-x-1 px-3 py-1 bg-gray-100 text-gray-700 rounded hover:bg-gray-200"
              >
                <Copy className="w-4 h-4" />
                <span>コピー</span>
              </button>
              <button
                onClick={downloadReport}
                className="flex items-center space-x-1 px-3 py-1 bg-gray-100 text-gray-700 rounded hover:bg-gray-200"
              >
                <Download className="w-4 h-4" />
                <span>ダウンロード</span>
              </button>
            </div>
          </div>
          
          <div className="bg-gray-50 rounded p-4 overflow-auto max-h-96">
            <pre className="whitespace-pre-wrap text-sm">{reportText}</pre>
          </div>
          
          <DiscordSettings reportText={reportText} onSend={() => {}} />
        </div>
      )}

      {/* 過去のレポート一覧 */}
      <div className="bg-white rounded-lg shadow">
        <div className="p-6 border-b">
          <h3 className="text-lg font-semibold">レポート履歴</h3>
        </div>
        <div className="p-6">
          {reports.length > 0 ? (
            <div className="space-y-3">
              {reports.map(report => (
                <div
                  key={report.id}
                  className="flex items-center justify-between p-4 bg-gray-50 rounded hover:bg-gray-100 cursor-pointer"
                  onClick={() => {}}
                >
                  <div>
                    <p className="font-medium">
                      {format(new Date(report.date), 'yyyy年M月d日', { locale: ja })}のレポート
                    </p>
                    <p className="text-sm text-gray-600">
                      完了: {report.completedTasks.length}件 / 
                      進行中: {report.inProgressTasks.length}件
                    </p>
                  </div>
                  <FileText className="w-5 h-5 text-gray-400" />
                </div>
              ))}
            </div>
          ) : (
            <p className="text-gray-500 text-center py-8">
              まだレポートが生成されていません
            </p>
          )}
        </div>
      </div>

      {/* ReportGenerator component removed */}
    </div>
  );
};

export default ReportView;